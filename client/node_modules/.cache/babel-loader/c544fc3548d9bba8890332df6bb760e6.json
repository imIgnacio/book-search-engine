{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ignac\\\\Documents\\\\Monash\\\\Homework\\\\book-search-engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\ignac\\\\Documents\\\\Monash\\\\Homework\\\\book-search-engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\ignac\\\\Documents\\\\Monash\\\\Homework\\\\book-search-engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';import{getMe,deleteBook}from'../utils/API';import Auth from'../utils/auth';import{removeBookId}from'../utils/localStorage';var SavedBooks=function SavedBooks(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),userData=_useState2[0],setUserData=_useState2[1];// use this to determine if `useEffect()` hook needs to run again\nvar userDataLength=Object.keys(userData).length;useEffect(function(){var getUserData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var token,response,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=4;break;}return _context.abrupt(\"return\",false);case 4:_context.next=6;return getMe(token);case 6:response=_context.sent;if(response.ok){_context.next=9;break;}throw new Error('something went wrong!');case 9:_context.next=11;return response.json();case 11:user=_context.sent;setUserData(user);_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function getUserData(){return _ref.apply(this,arguments);};}();getUserData();},[userDataLength]);// create function that accepts the book's mongo _id value as param and deletes the book from the database\nvar handleDeleteBook=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(bookId){var token,response,updatedUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context2.next=3;break;}return _context2.abrupt(\"return\",false);case 3:_context2.prev=3;_context2.next=6;return deleteBook(bookId,token);case 6:response=_context2.sent;if(response.ok){_context2.next=9;break;}throw new Error('something went wrong!');case 9:_context2.next=11;return response.json();case 11:updatedUser=_context2.sent;setUserData(updatedUser);// upon success, remove book's id from localStorage\nremoveBookId(bookId);_context2.next=19;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](3);console.error(_context2.t0);case 19:case\"end\":return _context2.stop();}}},_callee2,null,[[3,16]]);}));return function handleDeleteBook(_x){return _ref2.apply(this,arguments);};}();// if data isn't here yet, say so\nif(!userDataLength){return/*#__PURE__*/React.createElement(\"h2\",null,\"LOADING...\");}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Jumbotron,{fluid:true,className:\"text-light bg-dark\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Viewing saved books!\"))),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",null,userData.savedBooks.length?\"Viewing \".concat(userData.savedBooks.length,\" saved \").concat(userData.savedBooks.length===1?'book':'books',\":\"):'You have no saved books!'),/*#__PURE__*/React.createElement(CardColumns,null,userData.savedBooks.map(function(book){return/*#__PURE__*/React.createElement(Card,{key:book.bookId,border:\"dark\"},book.image?/*#__PURE__*/React.createElement(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,book.title),/*#__PURE__*/React.createElement(\"p\",{className:\"small\"},\"Authors: \",book.authors),/*#__PURE__*/React.createElement(Card.Text,null,book.description),/*#__PURE__*/React.createElement(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);}},\"Delete this Book!\")));}))));};export default SavedBooks;","map":{"version":3,"sources":["C:/Users/ignac/Documents/Monash/Homework/book-search-engine/client/src/pages/SavedBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","getMe","deleteBook","Auth","removeBookId","SavedBooks","userData","setUserData","userDataLength","Object","keys","length","getUserData","token","loggedIn","getToken","response","ok","Error","json","user","console","error","handleDeleteBook","bookId","updatedUser","savedBooks","map","book","image","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"]},"metadata":{},"sourceType":"module"}