{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\ignac\\\\Documents\\\\Monash\\\\Homework\\\\book-search-engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:\\\\Users\\\\ignac\\\\Documents\\\\Monash\\\\Homework\\\\book-search-engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\ignac\\\\Documents\\\\Monash\\\\Homework\\\\book-search-engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\ignac\\\\Documents\\\\Monash\\\\Homework\\\\book-search-engine\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Jumbotron,Container,Col,Form,Button,Card,CardColumns}from'react-bootstrap';import Auth from'../utils/auth';import{saveBook,searchGoogleBooks}from'../utils/API';import{saveBookIds,getSavedBookIds}from'../utils/localStorage';var SearchBooks=function SearchBooks(){// create state for holding returned google api data\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),searchedBooks=_useState2[0],setSearchedBooks=_useState2[1];// create state for holding our search field data\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchInput=_useState4[0],setSearchInput=_useState4[1];// create state to hold saved bookId values\nvar _useState5=useState(getSavedBookIds()),_useState6=_slicedToArray(_useState5,2),savedBookIds=_useState6[0],setSavedBookIds=_useState6[1];// set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n// learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\nuseEffect(function(){return function(){return saveBookIds(savedBookIds);};});// create method to search for books and set state on form submit\nvar handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response,_yield$response$json,items,bookData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(searchInput){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return searchGoogleBooks(searchInput);case 6:response=_context.sent;if(response.ok){_context.next=9;break;}throw new Error('something went wrong!');case 9:_context.next=11;return response.json();case 11:_yield$response$json=_context.sent;items=_yield$response$json.items;bookData=items.map(function(book){var _book$volumeInfo$imag;return{bookId:book.id,authors:book.volumeInfo.authors||['No author to display'],title:book.volumeInfo.title,description:book.volumeInfo.description,image:((_book$volumeInfo$imag=book.volumeInfo.imageLinks)===null||_book$volumeInfo$imag===void 0?void 0:_book$volumeInfo$imag.thumbnail)||''};});setSearchedBooks(bookData);setSearchInput('');_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 21:case\"end\":return _context.stop();}}},_callee,null,[[3,18]]);}));return function handleFormSubmit(_x){return _ref.apply(this,arguments);};}();// create function to handle saving a book to our database\nvar handleSaveBook=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(bookId){var bookToSave,token,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// find the book in `searchedBooks` state by the matching id\nbookToSave=searchedBooks.find(function(book){return book.bookId===bookId;});// get token\ntoken=Auth.loggedIn()?Auth.getToken():null;if(token){_context2.next=4;break;}return _context2.abrupt(\"return\",false);case 4:_context2.prev=4;_context2.next=7;return saveBook(bookToSave,token);case 7:response=_context2.sent;if(response.ok){_context2.next=10;break;}throw new Error('something went wrong!');case 10:// if book successfully saves to user's account, save book id to state\nsetSavedBookIds([].concat(_toConsumableArray(savedBookIds),[bookToSave.bookId]));_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](4);console.error(_context2.t0);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[4,13]]);}));return function handleSaveBook(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Jumbotron,{fluid:true,className:\"text-light bg-dark\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Search for Books!\"),/*#__PURE__*/React.createElement(Form,{onSubmit:handleFormSubmit},/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Col,{xs:12,md:8},/*#__PURE__*/React.createElement(Form.Control,{name:\"searchInput\",value:searchInput,onChange:function onChange(e){return setSearchInput(e.target.value);},type:\"text\",size:\"lg\",placeholder:\"Search for a book\"})),/*#__PURE__*/React.createElement(Col,{xs:12,md:4},/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"success\",size:\"lg\"},\"Submit Search\")))))),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",null,searchedBooks.length?\"Viewing \".concat(searchedBooks.length,\" results:\"):'Search for a book to begin'),/*#__PURE__*/React.createElement(CardColumns,null,searchedBooks.map(function(book){return/*#__PURE__*/React.createElement(Card,{key:book.bookId,border:\"dark\"},book.image?/*#__PURE__*/React.createElement(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,book.title),/*#__PURE__*/React.createElement(\"p\",{className:\"small\"},\"Authors: \",book.authors),/*#__PURE__*/React.createElement(Card.Text,null,book.description),Auth.loggedIn()&&/*#__PURE__*/React.createElement(Button,{disabled:savedBookIds===null||savedBookIds===void 0?void 0:savedBookIds.some(function(savedBookId){return savedBookId===book.bookId;}),className:\"btn-block btn-info\",onClick:function onClick(){return handleSaveBook(book.bookId);}},(savedBookIds===null||savedBookIds===void 0?void 0:savedBookIds.some(function(savedBookId){return savedBookId===book.bookId;}))?'This book has already been saved!':'Save this Book!')));}))));};export default SearchBooks;","map":{"version":3,"sources":["C:/Users/ignac/Documents/Monash/Homework/book-search-engine/client/src/pages/SearchBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBook","searchGoogleBooks","saveBookIds","getSavedBookIds","SearchBooks","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","handleFormSubmit","event","preventDefault","response","ok","Error","json","items","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","console","error","handleSaveBook","bookToSave","find","token","loggedIn","getToken","e","target","value","length","some","savedBookId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}