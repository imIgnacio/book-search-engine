{"ast":null,"code":"// route to get logged in user's info (needs the token)\nexport var getMe=function getMe(token){return fetch('/api/users/me',{headers:{'Content-Type':'application/json',authorization:\"Bearer \".concat(token)}});};export var createUser=function createUser(userData){return fetch('/api/users',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});};export var loginUser=function loginUser(userData){return fetch('/api/users/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});};// save book data for a logged in user\nexport var saveBook=function saveBook(bookData,token){return fetch('/api/users',{method:'PUT',headers:{'Content-Type':'application/json',authorization:\"Bearer \".concat(token)},body:JSON.stringify(bookData)});};// remove saved book data for a logged in user\nexport var deleteBook=function deleteBook(bookId,token){return fetch(\"/api/users/books/\".concat(bookId),{method:'DELETE',headers:{authorization:\"Bearer \".concat(token)}});};// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport var searchGoogleBooks=function searchGoogleBooks(query){return fetch(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(query));};","map":{"version":3,"sources":["C:/Users/ignac/Documents/Monash/Homework/book-search-engine/client/src/utils/API.js"],"names":["getMe","token","fetch","headers","authorization","createUser","userData","method","body","JSON","stringify","loginUser","saveBook","bookData","deleteBook","bookId","searchGoogleBooks","query"],"mappings":"AAAA;AACA,MAAO,IAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CAC9B,MAAOC,CAAAA,KAAK,CAAC,eAAD,CAAkB,CAC5BC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYH,KAAZ,CAFN,CADmB,CAAlB,CAAZ,CAMD,CAPM,CASP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,CAAc,CACtC,MAAOJ,CAAAA,KAAK,CAAC,YAAD,CAAe,CACzBK,MAAM,CAAE,MADiB,CAEzBJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAFgB,CAKzBK,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CALmB,CAAf,CAAZ,CAOD,CARM,CAUP,MAAO,IAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACL,QAAD,CAAc,CACrC,MAAOJ,CAAAA,KAAK,CAAC,kBAAD,CAAqB,CAC/BK,MAAM,CAAE,MADuB,CAE/BJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAFsB,CAK/BK,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CALyB,CAArB,CAAZ,CAOD,CARM,CAUP;AACA,MAAO,IAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWZ,KAAX,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,CAAC,YAAD,CAAe,CACzBK,MAAM,CAAE,KADiB,CAEzBJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYH,KAAZ,CAFN,CAFgB,CAMzBO,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeG,QAAf,CANmB,CAAf,CAAZ,CAQD,CATM,CAWP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASd,KAAT,CAAmB,CAC3C,MAAOC,CAAAA,KAAK,4BAAqBa,MAArB,EAA+B,CACzCR,MAAM,CAAE,QADiC,CAEzCJ,OAAO,CAAE,CACPC,aAAa,kBAAYH,KAAZ,CADN,CAFgC,CAA/B,CAAZ,CAMD,CAPM,CASP;AACA;AACA,MAAO,IAAMe,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CAC1C,MAAOf,CAAAA,KAAK,yDAAkDe,KAAlD,EAAZ,CACD,CAFM","sourcesContent":["// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save book data for a logged in user\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n"]},"metadata":{},"sourceType":"module"}